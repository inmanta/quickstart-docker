pipeline {
    agent none

    parameters {
        choice(
            name: 'RELEASE_FILTER',
            choices: ['dev_and_stable', 'dev', 'next', 'stable'],
            description: 'Set to dev, next or stable when the matrix should only the tests for dev, next or stable releases. \
                          By default, this job will run against dev and stable releases.'
        )
    }

    triggers {
        cron(BRANCH_NAME == "master" ? "H H(2-5) * * *": "")
    }

    options{
        disableConcurrentBuilds()
    }

    stages {
        stage('BuildAndTest') {
            matrix {
                agent any

                options{
                    timeout(time: 1, unit: 'HOURS')
                }

                when {
                    anyOf {
                        allOf {
                            expression { params.RELEASE_FILTER == 'dev_and_stable' }
                            anyOf {
                                expression { "dev" == env.RELEASE }
                                expression { "stable" == env.RELEASE }
                            }
                        }
                        expression { params.RELEASE_FILTER == env.RELEASE }
                    }
                }
                axes {
                    axis {
                        name 'RELEASE'
                        values 'dev', 'next', 'stable'
                    }
                    axis {
                        name 'EL_VERSION'
                        values '7', '8'
                    }
                }
                stages {
                    stage("Cleanup"){
                        steps {
                            sh '''
                               # Cleanup before starting
                               rm -f *.log
                               sudo rm -rf quickstart-project
                               sudo docker system prune -fa
                               sudo docker volume prune -f

                            '''
                        }
                    }
                    stage('Build') {
                        steps {
                            sh '''
                                # clone the quickstart project in to the mount directory
                                git clone https://github.com/inmanta/quickstart.git quickstart-project

                                # bring up the docker containers
                                sudo sh -c "docker-compose up -d --build --force-recreate"

                                ci/do_test_deployment_and_verify.sh
                            '''
                        }
                    }
                }
                post {
                    always {
                        sh '''
                           sudo docker-compose down
                           sudo rm -rf quickstart-project
                           sudo docker system prune -fa
                           sudo docker volume prune -f
                        '''
                        archiveArtifacts artifacts: '*.log'
                    }
                }
            }
        }
    }
}
